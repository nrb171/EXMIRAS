%% this script prepares rhi data from AOSPRE, and couples it to an EXMIRAS simulation

%% this script prepares the rhi data for EXMIRAS run, and runs the model
% specifically for the TIMREX-SPOL on 20080614, 

%% Prepare rhi data for EXMIRAS run
    d = "/h/eol/nbarron/work/timrex/spol/20080614/";
    
    folder = sprintf('/h/eol/nbarron/workshop/aospre-runs/squall-line-100m/output/%dm/', 2500);
    files = dir(folder);
    files = files(~[files.isdir]); % remove directories
    files = files(contains({files.name}, '.nc'));

    zGrid = 25:50:2025;
    xGrid = 3000:150:150000;

    dz=100;
    [zrmesh, rzmesh] = meshgrid(zGrid, xGrid);

    Dmean = 1.1;
    vmean = -0.1021 + 4.932*Dmean - 0.955*Dmean.^2 + 0.07934*Dmean.^3 - 0.002362*Dmean.^4;


%% get sounding data
    P = [956.0505  , 944.89514 , 934.15216 , 923.49915 , 912.9483  , ...
       902.4854  , 892.13245 , 881.8648  , 871.68286 , 861.60767 , ...
       851.62335 , 841.734   , 831.95    , 822.269   , 812.66174 , ...
       803.14825 , 793.71564 , 784.37335 , 775.11115 , 765.92834 , ...
       756.83264 , 747.81433 , 738.8697  , 730.0115  , 721.2249  , ...
       712.5225  , 703.89484 , 695.34656 , 686.87524 , 678.485   , ...
       670.1784  , 661.9465  , 653.7902  , 645.7213  , 637.7306  , ...
       629.8238  , 621.9907  , 614.24133 , 606.57715 , 598.98083 , ...
       591.46906 , 584.02875 , 576.675   , 569.3864  , 562.18585 , ...
       555.04865 , 547.9888  , 541.0012  , 534.0908  , 527.2473  , ...
       520.47876 , 513.7741  , 507.1445  , 500.5886  , 494.09683 , ...
       487.67343 , 481.3195  , 475.02924 , 468.8109  , 462.6535  , ...
       456.5679  , 450.54083 , 444.58524 , 438.68857 , 432.85666 , ...
       427.089   , 421.3812  , 415.73676 , 410.15366 , 404.6316  , ...
       399.16925 , 393.7678  , 388.42474 , 383.141   , 377.91483 , ...
       372.7467  , 367.63593 , 362.58188 , 357.5844  , 352.64267 , ...
       347.75662 , 342.9238  , 338.14618 , 333.42148 , 328.75043 , ...
       324.13174 , 319.56497 , 315.04855 , 310.58426 , 306.17007 , ...
       301.80624 , 297.49158 , 293.22565 , 289.0082  , 284.83932 , ...
       280.7182  , 276.64288 , 272.6155  , 268.6337  , 264.69824 , ...
       260.80795 , 256.96365 , 253.16339 , 249.40778 , 245.69571 , ...
       242.02766 , 238.40317 , 234.82132 , 231.28297 , 227.78679 , ...
       224.33331 , 220.92058 , 217.54967 , 214.2208  , 210.93224 , ...
       207.68529 , 204.477   , 201.31125 , 198.18391 , 195.09456 , ...
       192.04752 , 189.04083 , 186.07834 , 183.16112 , 180.28806 , ...
       177.45963 , 174.67525 , 171.93365 , 169.23479 , 166.57744 , ...
       163.96094 , 161.385   , 158.84862 , 156.35117 , 153.892   , ...
       151.47075 , 149.08632 , 146.7379  , 144.42564 , 142.14883 , ...
       139.9067  , 137.69803 , 135.52357 , 133.38194 , 131.27293 , ...
       129.19595 , 127.15058 , 125.13655 , 123.15304 , 121.20004 , ...
       119.27665 , 117.383316, 115.51897 , 113.68385 , 111.87726 , ...
       110.098976, 108.348236, 106.62499 , 104.92864 , 103.25827 ];
    rh =[70.005554, 71.90741 , 74.13464 , 76.44928 , 78.843094, 81.26029 , ...
       83.696396, 86.16115 , 88.49    , 89.63645 , 87.727325, 84.644485, ...
       82.44525 , 80.813255, 79.324326, 77.92408 , 76.59908 , 75.32339 , ...
       74.08524 , 72.86493 , 71.655365, 70.46351 , 69.28763 , 68.122345, ...
       66.96745 , 65.84524 , 64.77296 , 63.746696, 62.752678, 61.77586 , ...
       60.81679 , 59.87226 , 58.932793, 57.996887, 57.070843, 56.16127 , ...
       55.27646 , 54.423916, 53.593708, 52.790478, 52.019577, 51.275387, ...
       50.553062, 49.851406, 49.17081 , 48.515743, 47.886917, 47.27462 , ...
       46.680313, 46.11076 , 45.56115 , 45.027325, 44.51473 , 44.018436, ...
       43.541283, 43.093273, 42.665367, 42.24522 , 41.845943, 41.478046, ...
       41.134705, 40.81058 , 40.505707, 40.21519 , 39.943676, 39.701027, ...
       39.484653, 39.29155 , 39.13281 , 39.00638 , 38.902657, 38.837776, ...
       38.81838 , 38.8245  , 38.835663, 38.85654 , 38.900204, 38.964672, ...
       39.044712, 39.14085 , 39.256382, 39.39651 , 39.535553, 39.646084, ...
       39.739838, 39.839733, 39.947968, 40.06476 , 40.174026, 40.284283, ...
       40.391163, 40.49499 , 40.59468 , 40.657   , 40.667213, 40.630775, ...
       40.544064, 40.406395, 40.236866, 40.03721 , 39.828094, 39.627254, ...
       39.379807, 39.050343, 38.656723, 38.20484 , 37.68962 , 37.11259 , ...
       36.475624, 35.82982 , 35.197655, 34.54151 , 33.7989  , 32.987354, ...
       32.167892, 31.345547, 30.527958, 29.723314, 28.967255, 28.383598, ...
       28.039577, 27.60882 , 26.84561 , 25.906193, 25.021511, 24.267292, ...
       23.635548, 23.096617, 22.640524, 22.247051, 21.922058, 21.645998, ...
       21.403244, 21.200031, 21.035698, 20.90546 , 20.798489, 20.701181, ...
       20.629314, 20.580713, 20.542852, 20.517916, 20.514359, 20.532207, ...
       20.560818, 20.597746, 20.64423 , 20.693703, 20.737932, 20.767057, ...
       20.768618, 20.72759 , 20.644281, 20.536068, 20.420572, 20.309284, ...
       20.208647, 20.121351, 20.047478, 19.985468];

    T = [297.30597, 296.68796, 296.00015, 295.29218, 294.5859 , 293.87408, ...
       293.16592, 292.45074, 291.75427, 291.17065, 290.82468, 290.47232, ...
       289.96375, 289.36215, 288.71317, 288.026  , 287.3035 , 286.55222, ...
       285.77847, 284.98404, 284.17267, 283.35147, 282.52078, 281.68936, ...
       280.85803, 280.03442, 279.2208 , 278.42255, 277.64368, 276.8879 , ...
       276.15973, 275.4618 , 274.7968 , 274.166  , 273.56305, 272.97458, ...
       272.3873 , 271.79745, 271.20447, 270.6079 , 270.00705, 269.40292, ...
       268.79584, 268.18524, 267.57138, 266.95447, 266.33472, 265.71228, ...
       265.088  , 264.46164, 263.83322, 263.203  , 262.56998, 261.93607, ...
       261.2998 , 260.66312, 260.02475, 259.38583, 258.7459 , 258.10507, ...
       257.46362, 256.82217, 256.1805 , 255.53883, 254.89629, 254.25325, ...
       253.60977, 252.96584, 252.32162, 251.67645, 251.03009, 250.38303, ...
       249.73491, 249.0854 , 248.4346 , 247.78171, 247.1265 , 246.46973, ...
       245.80992, 245.14717, 244.48192, 243.8137 , 243.14241, 242.46788, ...
       241.78879, 241.10504, 240.41585, 239.72137, 239.02281, 238.3203 , ...
       237.6145 , 236.90504, 236.1916 , 235.47412, 234.75302, 234.0295 , ...
       233.30379, 232.57602, 231.84546, 231.11421, 230.38374, 229.65408, ...
       228.92616, 228.20088, 227.47804, 226.75896, 226.04483, 225.33463, ...
       224.62796, 223.92528, 223.22621, 222.53209, 221.84375, 221.16093, ...
       220.48518, 219.81668, 219.15381, 218.49542, 217.83873, 217.2015 , ...
       216.66414, 216.32498, 216.16821, 216.09955, 216.05128, 216.00337, ...
       215.95474, 215.90555, 215.85316, 215.79646, 215.73427, 215.66522, ...
       215.58827, 215.50389, 215.41241, 215.31508, 215.21184, 215.10269, ...
       214.98738, 214.86748, 214.74469, 214.61896, 214.49081, 214.36081, ...
       214.22946, 214.09793, 213.96646, 213.83572, 213.70706, 213.58463, ...
       213.4744 , 213.38275, 213.30763, 213.24243, 213.18019, 213.11655, ...
       213.04865, 212.97537, 212.89656, 212.81274];

    TDP = [ 18.110207  ,  17.90727   ,  17.693665  ,  17.466213  , ...
        17.235289  ,  16.9934    ,  16.743793  ,  16.489311  , ...
        16.213278  ,  15.852479  ,  15.231667  ,  14.38421   , ...
        13.519393  ,  12.656171  ,  11.768246  ,  10.853851  , ...
         9.914828  ,   8.953311  ,   7.972823  ,   6.974203  , ...
         5.9594393 ,   4.9338183 ,   3.9014082 ,   2.8658388 , ...
         1.8323158 ,   0.81037915,  -0.19174719,  -1.1707317 , ...
        -2.1254423 ,  -3.0543587 ,  -3.9538422 ,  -4.821718  , ...
        -5.6575346 ,  -6.4619884 ,  -7.2393055 ,  -8.000828  , ...
        -8.756804  ,  -9.509268  , -10.2603245 , -11.009955  , ...
       -11.757151  , -12.502537  , -13.246774  , -13.990146  , ...
       -14.732476  , -15.47288   , -16.211197  , -16.949245  , ...
       -17.686012  , -18.419407  , -19.151045  , -19.882154  , ...
       -20.611334  , -21.339111  , -22.064693  , -22.785282  , ...
       -23.50276   , -24.220146  , -24.934292  , -25.642704  , ...
       -26.346474  , -27.046795  , -27.743305  , -28.436193  , ...
       -29.125021  , -29.808485  , -30.487104  , -31.159834  , ...
       -31.825245  , -32.485252  , -33.139915  , -33.785843  , ...
       -34.422436  , -35.05356   , -35.683727  , -36.313217  , ...
       -36.937744  , -37.55599   , -38.171677  , -38.786125  , ...
       -39.396423  , -40.000584  , -40.60422   , -41.213608  , ...
       -41.827293  , -42.441753  , -43.05607   , -43.67015   , ...
       -44.283764  , -44.895844  , -45.507126  , -46.11947   , ...
       -46.734707  , -47.359016  , -47.99531   , -48.64228   , ...
       -49.299572  , -49.967037  , -50.64497   , -51.331898  , ...
       -52.02056   , -52.70628   , -53.398705  , -54.105373  , ...
       -54.825035  , -55.555626  , -56.29649   , -57.04736   , ...
       -57.809937  , -58.574093  , -59.333855  , -60.094345  , ...
       -60.867306  , -61.654522  , -62.44242   , -63.229     , ...
       -64.014175  , -64.7986    , -65.575966  , -66.29216   , ...
       -66.84369   , -67.22736   , -67.5297    , -67.79973   , ...
       -68.04326   , -68.25861   , -68.45075   , -68.62557   , ...
       -68.78539   , -68.93316   , -69.069336  , -69.19831   , ...
       -69.32573   , -69.44923   , -69.56807   , -69.68263   , ...
       -69.795105  , -69.91027   , -70.024956  , -70.13757   , ...
       -70.24927   , -70.360085  , -70.46784   , -70.57165   , ...
       -70.67362   , -70.77402   , -70.872215  , -70.96939   , ...
       -71.06666   , -71.16399   , -71.25992   , -71.35385   , ...
       -71.44706   , -71.5398    , -71.63229   , -71.7249    , ...
       -71.8178    , -71.911064  , -72.00469   , -72.09864   ] + 273.15;

       es = @(T) 2.53e9*exp(-5420./(T)); %hPa

       Zm = 50:100:16000;

    ua = [...
        0.47658452,  0.95294815,  1.3875318 ,  1.7966706 ,  2.1973934 , ...
        2.6013203 ,  3.0048923 ,  3.4033713 ,  3.790009  ,  4.162258  , ...
        4.5231023 ,  4.8775086 ,  5.2336826 ,  5.6035624 ,  5.987069  , ...
        6.378072  ,  6.77088   ,  7.1633253 ,  7.5572133 ,  7.9522996 , ...
        8.347267  ,  8.740765  ,  9.131449  ,  9.518194  ,  9.900608  , ...
        10.278268  , 10.651744  , 11.021663  , 11.387418  , 11.750075  , ...
        12.111185  , 12.472893  , 12.836091  , 13.201147  , 13.568064  , ...
        13.936623  , 14.307282  , 14.6805525 , 15.056863  , 15.436586  , ...
        15.821008  , 16.210062  , 16.601654  , 16.995583  , 17.391272  , ...
        17.786442  , 18.17902   , 18.559143  , 18.891617  , 19.120087  , ...
        19.218029  , 19.237991  , 19.239965  , 19.239948  , 19.2404    , ...
        19.240326  , 19.239784  , 19.238096  , 19.234818  , 19.22959   , ...
        19.223217  , 19.218271  , 19.214367  , 19.210575  , 19.206923  , ...
        19.202518  , 19.198347  , 19.193287  , 19.186335  , 19.181215  , ...
        19.178299  , 19.177013  , 19.176592  , 19.176052  , 19.17564   , ...
        19.174599  , 19.174654  , 19.17693   , 19.180464  , 19.18676   , ...
        19.194975  , 19.203522  , 19.21069   , 19.21636   , 19.22138   , ...
        19.226967  , 19.235643  , 19.248669  , 19.264055  , 19.27637   , ...
        19.287117  , 19.29974   , 19.321892  , 19.349031  , 19.375336  , ...
        19.400103  , 19.417164  , 19.431643  , 19.449213  , 19.464333  , ...
        19.479576  , 19.50084   , 19.522045  , 19.53405   , 19.537514  , ...
        19.540237  , 19.547644  , 19.56084   , 19.579275  , 19.60266   , ...
        19.627113  , 19.651411  , 19.67942   , 19.713552  , 19.752777  , ...
        19.793156  , 19.830967  , 19.867952  , 19.906353  , 19.945305  , ...
        19.976742  , 19.998983  , 20.025377  , 20.06455   , 20.100695  , ...
        20.126104  , 20.145374  , 20.155893  , 20.155586  , 20.147774  , ...
        20.135006  , 20.114746  , 20.08623   , 20.051514  , 20.014133  , ...
        19.97604   , 19.935068  , 19.887667  , 19.836843  , 19.78514   , ...
        19.732502  , 19.677818  , 19.621395  , 19.564903  , 19.508953  , ...
        19.454082  , 19.400139  , 19.346292  , 19.292286  , 19.238525  , ...
        19.18676   , 19.145292  , 19.123299  , 19.125301  , 19.151012  , ...
        19.197056  , 19.258047  , 19.327827  , 19.400885  , 19.472883   ...
        ];
    va = [...
        0.31551197,  0.3608571 ,  0.3948148 ,  0.4281418 ,  0.45882785, ...
        0.47932854,  0.47983113,  0.4610822 ,  0.43107083,  0.38941684, ...
        0.3403077 ,  0.29652974,  0.26143253,  0.22980371,  0.1961926 , ...
        0.1637127 ,  0.13781194,  0.11849884,  0.1038715 ,  0.09460594, ...
        0.09256307,  0.09596159,  0.10340483,  0.11341699,  0.1246613 , ...
        0.13619612,  0.14738257,  0.15722577,  0.16475883,  0.16894302, ...
        0.16981998,  0.16802655,  0.1628517 ,  0.15409493,  0.14432694, ...
        0.13674694,  0.13298497,  0.1332051 ,  0.13658732,  0.14136755, ...
        0.14628056,  0.15139566,  0.15625875,  0.15965128,  0.16102384, ...
        0.16018672,  0.160111  ,  0.17926879,  0.25121543,  0.37688783, ...
        0.4644392 ,  0.4726525 ,  0.45283055,  0.4268578 ,  0.39873028, ...
        0.36911345,  0.338029  ,  0.30505407,  0.2691393 ,  0.23090982, ...
        0.19094023,  0.14929552,  0.10620724,  0.0638846 ,  0.021493  , ...
        -0.01958837, -0.05824608, -0.09588595, -0.13427655, -0.17409857, ...
        -0.21467786, -0.2554095 , -0.2956094 , -0.33300036, -0.3668036 , ...
        -0.39703918, -0.4248652 , -0.45058537, -0.47283983, -0.49232012, ...
        -0.5089947 , -0.52498764, -0.54288316, -0.56125385, -0.57860786, ...
        -0.59429437, -0.60834694, -0.62113076, -0.6313893 , -0.6363126 , ...
        -0.6348628 , -0.632486  , -0.6399698 , -0.64722455, -0.6441534 , ...
        -0.63745904, -0.6312891 , -0.63109297, -0.63511664, -0.63919   , ...
        -0.64156735, -0.6427166 , -0.6458378 , -0.65277684, -0.66457176, ...
        -0.6872645 , -0.7140995 , -0.74391645, -0.78047216, -0.819945  , ...
        -0.86176366, -0.9074199 , -0.96123195, -1.0190103 , -1.0776979 , ...
        -1.1338784 , -1.1860504 , -1.2366174 , -1.2866989 , -1.3376706 , ...
        -1.3799034 , -1.4026139 , -1.411431  , -1.4210217 , -1.4274024 , ...
        -1.4246327 , -1.4129113 , -1.3943467 , -1.3733581 , -1.3543233 , ...
        -1.335386  , -1.3134462 , -1.2886049 , -1.2641792 , -1.2406474 , ...
        -1.2123885 , -1.1798934 , -1.1435902 , -1.1028236 , -1.057947  , ...
        -1.0120108 , -0.964987  , -0.91537225, -0.8634302 , -0.80887914, ...
        -0.7509227 , -0.689812  , -0.6257286 , -0.55996853, -0.49224773, ...
        -0.4172159 , -0.32820567, -0.22865808, -0.13007827, -0.04534268, ...
        0.01680955,  0.05413124,  0.06968116,  0.06901853,  0.05858435...
        ];

    Zm = 50:100:16000;
    TProfile = interp1(Zm, T, zGrid, 'linear', 'extrap'); % K
    RHProfile = interp1(Zm, rh, zGrid, 'linear', 'extrap')/100; % relative humidity
    TDPProfile = interp1(Zm, TDP, zGrid, 'linear', 'extrap') + 273.15; % K
    presProfile = interp1(Zm, P, zGrid, 'linear', 'extrap'); % pressure hPa


%% load necessary rhi data
    % picking the 14th scan
    ii=26
    file = fullfile(files(ii).folder, files(ii).name);
    % nci = ncinfo(fullfile(files(ii).folder,files(ii).name));

    x = ncread(file, 'x');
    y = ncread(file, 'y');
    z = ncread(file, 'z');
    range = ncread(file, 'range');
    range = repmat(range, 1, size(x,2));
    % dataToPlot = ncread(file, variables(indexToPlot));
    Zdr = ncread(file, 'Zdr');
    Vel = ncread(file, 'VEL');
    Zhh = ncread(file, 'Zhh_attenuated');
    

    %% get datetime and relative humidity profile
    % dt = datetime(files(ii).name(7:21), 'InputFormat', 'yyyyMMdd_HHmmss');

    de = dsdEstimator;
    de.bandName = 'C';
    de.RHProfileObs = RHProfile;

    %% extract the azimuth we need (put into the right variable names)

    xmesh = range;
    ymesh = z;
    Zhhm = Zhh;
    Zdrm = Zdr;
    VRm = Vel;

    %% plot up some tests'
    meanVel = mean(VRm(Zhhm>30 & VRm>-26.7));

    figure('units','inches','position',[0,0,6.05,1.5])
    pcolor(xmesh./abs(meanVel), ymesh, Zhhm)
    setMeteoColormap(gca, 'Zhh')
    shading flat
    ylim([0,2500])
    xlim([0, 4000])
    print2(gcf, '/h/eol/nbarron/figures/publications/exmiras/AOSPRE_SL_Zhh.pdf')
    figure('units','inches','position',[0,0,6.05,1.5])
    
    
    pcolor(xmesh./abs(meanVel), ymesh, Zdrm)
    setMeteoColormap(gca, 'Zdr')
    shading flat
    ylim([0,2500])
    xlim([0, 4000])
    print2(gcf, '/h/eol/nbarron/figures/publications/exmiras/AOSPRE_SL_Zdr.pdf')

    Zhhsi = scatteredInterpolant(double(xmesh(:)), double(ymesh(:)), 10.^(double(Zhhm(:))./10), 'linear');
    Zdrsi = scatteredInterpolant(double(xmesh(:)), double(ymesh(:)), double(Zdrm(:)), 'linear');
    vrsi = scatteredInterpolant(double(xmesh(:)), double(ymesh(:)), double(VRm(:)), 'linear');

    ZhhProfile = 10*log10(Zhhsi(rzmesh, zrmesh));
    ZdrProfile = Zdrsi(rzmesh, zrmesh);
    vrProfile = vrsi(rzmesh, zrmesh);

    indMax = find(xGrid./abs(meanVel) > 4000, 1,"first");

    ZhhProfile = ZhhProfile(1:indMax,:);
    ZdrProfile = ZdrProfile(1:indMax,:);
    vrProfile = vrProfile(1:indMax,:);
    %% perform the DSD estimation only when the Zhh is above 30 dBZ

    mu = [];
    gamma = [];
    error = [];
    ZhhOpt = [];
    ZdrOpt = [];
    DmOpt = []
    inds = 2:size(ZhhProfile, 1)-1;
    parfor jj = 1:numel(inds)
        indToTest = max(inds(jj)-1,1): min(inds(jj)+1, size(ZhhProfile,1));
        
        [ZhhOptTemp, ZdrOptTemp, DmOptTemp,fv]=de.profileOptimizer(...
            ZhhProfile(indToTest,:)', ... 
            ZdrProfile(indToTest,:)' ...
        );
        ra = radar('C');
        % ra.rngToggle = true; % toggle for random number generator
        ra.rngToggle = false; % toggle for random number generator
        [~, ~,muTemp, gammaTemp] = ra.initFromDm(ZhhOptTemp, ZdrOptTemp, DmOptTemp);
        mu(jj) = muTemp;
        gamma(jj) = gammaTemp;
        error(jj) = fv;
        ZhhOpt(jj) = ZhhOptTemp;
        ZdrOpt(jj) = ZdrOptTemp;
        DmOpt(jj) = DmOptTemp;
    end

%% Run EXMIRAS with the optimized DSD
    %% Set up the observation profiles
    obsRef = ZhhOpt;
    obsZdr = ZdrOpt;
    obsDm = DmOpt;
    obsSeconds = xGrid(1:indMax)./abs(meanVel);

    % initialize exmiras object.
    ex = exmiras;

    % set up model domain
    ex.xgrid = [50];
    ex.ygrid = [50];
    ex.zgrid = 25:50:2025;

    % set starting state variables
    es = @(T) 2.53e9*exp(-5420./(T)); %hPa
    ex.T = TProfile;
    ex.p = presProfile;
    ex.pv = es(ex.T).*RHProfile;

    ex.u = zeros(size(ex.T));
    ex.v = zeros(size(ex.T));
    ex.w = zeros(size(ex.T));

    % reshape to match model grid
    ex.T = reshape(ex.T, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);
    ex.p = reshape(ex.p, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);
    ex.pv = reshape(ex.pv, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);
    ex.u = reshape(ex.u, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);
    ex.v = reshape(ex.v, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);
    ex.w = reshape(ex.w, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);


    dBZi = obsRef(1) + rand(numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid))*0;
    Zdri = obsZdr(1) + rand(numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid))*0;
    dBZi(:,:,1:size(dBZi,3)-1) = -inf;
    Zdri(:,:,1:size(dBZi,3)-1) = 0;

    % initialize dsd from reflectivity/zdr
    ex = ex.initFromDm(obsRef(1), obsZdr(1), obsDm(1));
    ex.NP = ex.N;

    %set time step/total integration time
    ex.dt = 0.5;
    ex.st = max(obsSeconds)./ex.dt;

    % set radar band
    bandName = "C";

    %% initialize the state/analysis variables
    sz = numel(ex.zgrid);
    numSteps = floor(ex.st+60/ex.dt);
    T = NaN(numSteps, sz);
    p = NaN(numSteps, sz);
    qv = NaN(numSteps, sz);
    pv = NaN(numSteps, sz);
    dBZhh = NaN(numSteps, sz);
    dBZvv = NaN(numSteps, sz);
    theta = NaN(numSteps, sz);
    RR = NaN(numSteps, sz);
    rhohv = NaN(numSteps, sz);
    kdp = NaN(numSteps, sz);

    % save initial temperature profile for later plotting
    T0 = ex.T;

    ex = ex.integrate;
    dts = ex.dt;
    iObs = 1;
    fig = figure('units','inches','position',[0,0,5.75,3]);
    hold on
    for i = 2:numSteps
        if (i-1)*ex.dt>=obsSeconds(iObs+1) & i*ex.dt<obsSeconds(iObs+2)
            % update the model with the next observation
            fprintf('updating model with observation\n')
            NTemp0 = ex.N;

            iObs = iObs + 1;
            dbz = zeros(numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid));
            dbz(end) = obsRef(iObs);
            zdr = zeros(numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid));
            zdr(end) = max(min(obsZdr(iObs),3),0.2);
            ex = ex.initFromDm(obsRef(iObs), obsZdr(iObs), obsDm(iObs));
            

            Ntemp = ex.N;
            Ntemp(:,:,1:end-1,:) = 0;
            ex.NP = Ntemp;


            %% plot the model output
            

            % r = 0.9951 + 0.02510*ex.D - 0.03644*ex.D.^2 + 0.005303*ex.D.^3 - 0.0002492*ex.D.^4;
            % fprintf('updated model with observation')
            iObs = iObs + 1;
    
        end


        ex = ex.integrate;
        
        T(i,:) = squeeze(ex.T(1,1,:))-squeeze(T0(1,1,:));
        theta(i,:) = ex.theta(1,1,:);
        p(i,:) = ex.p(1,1,:);
        qv(i,:) = ex.qv(1,1,:);
        pv(i,:) = ex.pv(1,1,:);
        dBZhh(i,:) = ex.Zhh(1,1,:);
        dBZvv(i,:) = ex.Zvv(1,1,:);
        RR(i,:) = ex.RR(1,1,:);
        rhohv(i,:) = ex.rhohv(1,1,:);
        kdp(i,:) = ex.kdp(1,1,:);
        dts(i) = sum(dts) + ex.dt;
    end
    Zdr = dBZhh - dBZvv;

    save('./AOSPRE-SL-EXMIRAS.mat', 'T', 'p', 'qv', 'pv', 'dBZhh', 'dBZvv', 'Zdr', 'RR', 'rhohv', 'kdp', 'ex');

    % load('./KOKCcasestudy.mat');

    [TT, ZT] = meshgrid((1:numSteps)*ex.dt, ex.zgrid);

    % [~,dTdt]=gradient(T, ex.dt);
    % dTdt = movmean(dTdt*3600,5*60,1);
    % TT = TT';
    % ZT = ZT';
    % variablesToPlot = {dTdt, qv*100, dBZhh, Zdr, RR, rhohv, kdp};
    % titles = {'dTdt', 'RH', 'Zhh', 'Zdr', 'RainRate', 'CC', 'Kdp'};
    % numSteps = ex.st+60/ex.dt;


    % scanID = 1;
    % load(sprintf('./SL-%d_%d.mat', levelOfAOSPRE,scanID), 'T', 'p', 'qv', 'pv', 'dBZhh', 'dBZvv', 'Zdr', 'RR', 'rhohv', 'kdp', 'ex');
    [~,dT] = gradient(T, 0.5);
    dT = dT*3600; % convert to K/hr
    variablesToPlot = {dlog10(dT), 100*qv, dBZhh, Zdr, RR, rhohv, kdp};
    titles = {'dTdt', 'RH', 'Zhh', 'Zdr', 'RainRate', 'CC', 'KDP'};
    plotTimeProfile( ex.zgrid,(1:numSteps)*ex.dt,['/h/eol/nbarron/figures/publications/exmiras/AOSPRE_SL'], variablesToPlot, titles)

    averagedTdt = mean(dTdt(1:7200,:), 'all', 'omitmissing');




%{
%% this script plots RHI scans, and links them to an EXMIRAS simulation, running it. 

indexToPlot = 3; % 1: Zdr, 2: Zhh_attenuated, 3: VEL
obsPlotBool = 1;
levelOfAOSPRE = 2500;

folder = sprintf('/h/eol/nbarron/workshop/aospre-runs/squall-line-100m/output/%dm/', levelOfAOSPRE);
files = dir(folder);
files = files(~[files.isdir]); % remove directories
files = files(contains({files.name}, '.nc'));
files = sort(string({files.name})); % sort files by name



%% load the RHI scans
inds = 1:100:length(files);
hold on
xs = [];
ys = [];
zs = [];
ds = [];
ts = [];
Zhhs = [];
Zhhms = [];
Zdrs = [];
Vels = [];
lats = [];
lons = [];
files(3:3:18) = []; % remove first 3 files (not RHI scans)
variables = ["Zdr", "Zhh_attenuated", "VEL"];
colormaps = {[winter(12);flipud(autumn(12));flipud(cool(12))], colortables('RADAR32'), colortables('newblue')};
clims = {[-1,5], [1.5*[-2*10/6,50]], [-25,25]}; 
if obsPlotBool
    fig = figure("Units","inches","Position", [0,0,3,3]);
    ax1 = axes(fig);
    hold on
end
for i = 1:numel(files)
    
    file = fullfile(folder, files(i));
    fprintf('Loading %s\n', file)
    
    
    
    x = ncread(file, 'x');
    y = ncread(file, 'y');
    z = ncread(file, 'z');
    range = ncread(file, 'range');
    dataToPlot = ncread(file, variables(indexToPlot));
    Zdr = ncread(file, 'Zdr');
    Vel = ncread(file, 'VEL');
    Zhh = ncread(file, 'Zhh_attenuated');
    
    lats(end+1) = mean(ncread(file, 'latitude'));
    lons(end+1) = mean(ncread(file, 'longitude'));
    
    % z(z>4000) = NaN; % remove above 4000m
    
    scanNumber = 31; %%%!!!!!! change this back to 31 when simulation is done!!!!!!
    
    % pcolor(x(:,scanNumber-1:scanNumber+1), y(:,scanNumber-1:scanNumber+1), Zhh(:,scanNumber-1:scanNumber+1), 'EdgeColor', 'none');
    
    xs(:,end+1) = x(:,scanNumber);
    ys(:,end+1) = y(:,scanNumber);
    zs(:,end+1) = z(:,scanNumber);
    ds(:,end+1) = dataToPlot(:,scanNumber);
    Zhhs(:,end+1) = Zhh(:,scanNumber);
    Zdrs(:,end+1) = Zdr(:,scanNumber);
    Vels(:,end+1) = Vel(:,scanNumber);
    
    
    
    % ts(1:size(ds,1),end+1) = i;
    % d = sqrt((x(1,1)-x).^2 + (y(1,1)-y).^2);
    % ds(:,end+1) = d(:,scanNumber);
    
    if any([1,15,29] == i) && obsPlotBool
        % Zhh(Zhh<0) = NaN; % remove negative values
        surf(ax1,x*100,y*100,z,dataToPlot, "EdgeColor", 'none');
        % k = boundary(x(:),y(:),z(:));
        % plot3(x(k)*100, y(k)*100, z(k), 'k', 'LineWidth', 1.5);
        % contour3(x*100,y*100,z,~isnan(Zhh),1, 'k', 'LineWidth', 3);
    end

    if obsPlotBool
        % [TT, ZT] = meshgrid((1:numSteps)*ex.dt, ex.zgrid);
        % TT = TT';
        % ZT = ZT';
        % variablesToPlot = {T, qv, dBZhh, Zdr, RR, rhohv, kdp};
        % Zhhs(:,end+1) = Zhh(:,scanNumber);
        % Zdrs(:,end+1) = Zdr(:,scanNumber);
        
        
        fig2 = figure('units','inches','position',[0,0,6.05,1.5]);
        ax2 = axes(fig2);
        d = sqrt((x(1,scanNumber)-x).^2 + (y(1,scanNumber)-y).^2)*100;
        pcolor(ax2,d/15,z,Zhh, "EdgeColor", 'none', 'FaceColor', 'interp');
        % ylabel(ax2, 'Altitude (m)')
        % xlabel(ax2, 'Time (s)')
        % keyboard
        ylim(ax2,[0,3000]);
        xlim(ax2, [0,3600])
        % d = sqrt((x(1,scanNumber)-x).^2 + (y
        % colorbar(ax2);
        colormap(ax2, colortables('RADAR32'));
        clim(ax2,[1.5*[-2*10/6,50]]);
        print2(fig2, sprintf('~/figures/publications/exmiras/SL-rhi-%d_%.0f_Zhh.pdf', levelOfAOSPRE, i), 'Quality', '-r300');


        fig2 = figure('units','inches','position',[0,0,6.05,1.5]);
        ax2 = axes(fig2);
        d = sqrt((x(1,scanNumber)-x).^2 + (y(1,scanNumber)-y).^2)*100;
        pcolor(ax2,d/15,z,Zdr, "EdgeColor", 'none', 'FaceColor', 'interp');
        % ylabel(ax2, 'Altitude (m)')
        % xlabel(ax2, 'Time (s)')
        % keyboard
        ylim(ax2,[0,3000]);
        xlim(ax2, [0,3600])
        % d = sqrt((x(1,scanNumber)-x).^2 + (y
        % colorbar(ax2);
        colormap(ax2, [winter(12);flipud(autumn(12));flipud(cool(12))]);
        clim(ax2,[-1,5]);
        print2(fig2, sprintf('~/figures/publications/exmiras/SL-rhi-%d_%.0f_Zdr.pdf',levelOfAOSPRE, i), 'Quality', '-r300');


        % titles = {'temperature perturbation', 'water vapor saturation', 'Z_{HH}', 'Z_{DR}', 'Rain Rate', 'Correlation Coefficient', 'Specific Differential Phase'};
        % cLabels = {'K', '', 'dBZ', 'dBZ', 'mm/hr', ' ', 'deg/km'};
        % clims = {[-6,6], [0.3,1], 1.5*[-2*10/6,50], [-1,5], [0, 12], [0.95, 1], [0.5e-2, 0.5]};
        % colormaps = {colortables('newblue'), cbrewer('seq','PuBu',64), colortables('RADAR32'), [winter(12);flipud(autumn(12));flipud(cool(12))], cbrewer('seq','RdPu',64), flipud(turbo(64)), flipud(autumn(64))+[0,0,0.8]};
        % plotTimeProfile((1:numSteps)*ex.dt, ex.zgrid,['~/figures/publications/exmiras/SL_',num2str(scanID)], variablesToPlot, titles, cLabels, clims, colormaps)
    end
    
end
if obsPlotBool
    % surf(xs*100, ys*100, zs-2001, ds, "EdgeColor", 'none');

    % surf(ts, ds, zs-2000, Zhhs, "EdgeColor", 'none');
    grid on
    % print(gcf, '.temp.png', '-dpng')
    % print2
    plot3(xs(1,:)*100, ys(1,:)*100, zs(1,:), 'k--.', 'LineWidth', 1, 'MarkerSize', 10) % plot the scan line

    xps = xs(1,:)*100; xps = xps(:);
    yps = ys(1,:)*100; yps = yps(:);
    for range = 15000:15000:60000
        pb = polybuffer([xps, yps], 'lines', range)
        pt = plot(pb, 'EdgeColor', 'k', 'LineWidth', 0.5); % plot the scan line buffer
        pt.FaceColor = 'none';
    end


    % plot3(xs(1,:)*100, ys(1,:)*100,zeros(size(zs(1,:))), 'k') % plot the scan line points
    % Zhhs(Zhhs<0) = NaN; % remove negative values
    Zhhf = scatteredInterpolant(xs(:)*100, ys(:)*100, ds(:), "natural");
    % surf(xs*100, ys*100, zs*0, Zhhs, "EdgeColor", 'none');
    surf(xs*100, ys*100, zs*0-10, Zhhf(xs*100, ys*100), "EdgeColor", 'none');

    colormap(colormaps{indexToPlot});
    caxis(clims{indexToPlot})

    % caxis(1.5*[-2*10/6,50])

    zlim([-10,13000])
    daspect([1,1,0.1])
    xlim([.65e5,1.6e5])
    ylim([0.6227e5,1.759e5])
    view(25.7, 18.0842)
    grid on
    % shading flat
    print2(gcf, sprintf('~/figures/publications/exmiras/SL-rhi-%d-%s.pdf', levelOfAOSPRE, variables(indexToPlot)), 'Quality', '-r300');
end


%{
from netCDF4 import Dataset
from wrf import getvar
import numpy as np

ncfile = Dataset("/export/wind1/bradklotz/CM1_SQUALL_LINE_100m/wrfout_0014420s.nc")

# Get the Sea Level Pressure
rh = getvar(ncfile, "rh")
T = getvar(ncfile, "temp")
td = getvar(ncfile, "td")
td2 = np.array(td)
u = getvar(ncfile, "ua").as_numpy(); u = u.as_numpy()
v = getvar(ncfile, "va").as_numpy(); v = v.as_numpy()

np.mean(np.mean(T, axis=1), axis=1)
np.mean(np.mean(P, axis=1), axis=1)
np.mean(np.mean(rh, axis=1), axis=1)
np.mean(np.mean(td, axis=1), axis=1)
np.mean(np.mean(u, axis=1), axis=1)
np.mean(np.mean(v, axis=1), axis=1)

import matplotlib.pyplot as plt
import numpy as np


%}
P = [956.0505  , 944.89514 , 934.15216 , 923.49915 , 912.9483  , ...
       902.4854  , 892.13245 , 881.8648  , 871.68286 , 861.60767 , ...
       851.62335 , 841.734   , 831.95    , 822.269   , 812.66174 , ...
       803.14825 , 793.71564 , 784.37335 , 775.11115 , 765.92834 , ...
       756.83264 , 747.81433 , 738.8697  , 730.0115  , 721.2249  , ...
       712.5225  , 703.89484 , 695.34656 , 686.87524 , 678.485   , ...
       670.1784  , 661.9465  , 653.7902  , 645.7213  , 637.7306  , ...
       629.8238  , 621.9907  , 614.24133 , 606.57715 , 598.98083 , ...
       591.46906 , 584.02875 , 576.675   , 569.3864  , 562.18585 , ...
       555.04865 , 547.9888  , 541.0012  , 534.0908  , 527.2473  , ...
       520.47876 , 513.7741  , 507.1445  , 500.5886  , 494.09683 , ...
       487.67343 , 481.3195  , 475.02924 , 468.8109  , 462.6535  , ...
       456.5679  , 450.54083 , 444.58524 , 438.68857 , 432.85666 , ...
       427.089   , 421.3812  , 415.73676 , 410.15366 , 404.6316  , ...
       399.16925 , 393.7678  , 388.42474 , 383.141   , 377.91483 , ...
       372.7467  , 367.63593 , 362.58188 , 357.5844  , 352.64267 , ...
       347.75662 , 342.9238  , 338.14618 , 333.42148 , 328.75043 , ...
       324.13174 , 319.56497 , 315.04855 , 310.58426 , 306.17007 , ...
       301.80624 , 297.49158 , 293.22565 , 289.0082  , 284.83932 , ...
       280.7182  , 276.64288 , 272.6155  , 268.6337  , 264.69824 , ...
       260.80795 , 256.96365 , 253.16339 , 249.40778 , 245.69571 , ...
       242.02766 , 238.40317 , 234.82132 , 231.28297 , 227.78679 , ...
       224.33331 , 220.92058 , 217.54967 , 214.2208  , 210.93224 , ...
       207.68529 , 204.477   , 201.31125 , 198.18391 , 195.09456 , ...
       192.04752 , 189.04083 , 186.07834 , 183.16112 , 180.28806 , ...
       177.45963 , 174.67525 , 171.93365 , 169.23479 , 166.57744 , ...
       163.96094 , 161.385   , 158.84862 , 156.35117 , 153.892   , ...
       151.47075 , 149.08632 , 146.7379  , 144.42564 , 142.14883 , ...
       139.9067  , 137.69803 , 135.52357 , 133.38194 , 131.27293 , ...
       129.19595 , 127.15058 , 125.13655 , 123.15304 , 121.20004 , ...
       119.27665 , 117.383316, 115.51897 , 113.68385 , 111.87726 , ...
       110.098976, 108.348236, 106.62499 , 104.92864 , 103.25827 ];
rh =[70.005554, 71.90741 , 74.13464 , 76.44928 , 78.843094, 81.26029 , ...
       83.696396, 86.16115 , 88.49    , 89.63645 , 87.727325, 84.644485, ...
       82.44525 , 80.813255, 79.324326, 77.92408 , 76.59908 , 75.32339 , ...
       74.08524 , 72.86493 , 71.655365, 70.46351 , 69.28763 , 68.122345, ...
       66.96745 , 65.84524 , 64.77296 , 63.746696, 62.752678, 61.77586 , ...
       60.81679 , 59.87226 , 58.932793, 57.996887, 57.070843, 56.16127 , ...
       55.27646 , 54.423916, 53.593708, 52.790478, 52.019577, 51.275387, ...
       50.553062, 49.851406, 49.17081 , 48.515743, 47.886917, 47.27462 , ...
       46.680313, 46.11076 , 45.56115 , 45.027325, 44.51473 , 44.018436, ...
       43.541283, 43.093273, 42.665367, 42.24522 , 41.845943, 41.478046, ...
       41.134705, 40.81058 , 40.505707, 40.21519 , 39.943676, 39.701027, ...
       39.484653, 39.29155 , 39.13281 , 39.00638 , 38.902657, 38.837776, ...
       38.81838 , 38.8245  , 38.835663, 38.85654 , 38.900204, 38.964672, ...
       39.044712, 39.14085 , 39.256382, 39.39651 , 39.535553, 39.646084, ...
       39.739838, 39.839733, 39.947968, 40.06476 , 40.174026, 40.284283, ...
       40.391163, 40.49499 , 40.59468 , 40.657   , 40.667213, 40.630775, ...
       40.544064, 40.406395, 40.236866, 40.03721 , 39.828094, 39.627254, ...
       39.379807, 39.050343, 38.656723, 38.20484 , 37.68962 , 37.11259 , ...
       36.475624, 35.82982 , 35.197655, 34.54151 , 33.7989  , 32.987354, ...
       32.167892, 31.345547, 30.527958, 29.723314, 28.967255, 28.383598, ...
       28.039577, 27.60882 , 26.84561 , 25.906193, 25.021511, 24.267292, ...
       23.635548, 23.096617, 22.640524, 22.247051, 21.922058, 21.645998, ...
       21.403244, 21.200031, 21.035698, 20.90546 , 20.798489, 20.701181, ...
       20.629314, 20.580713, 20.542852, 20.517916, 20.514359, 20.532207, ...
       20.560818, 20.597746, 20.64423 , 20.693703, 20.737932, 20.767057, ...
       20.768618, 20.72759 , 20.644281, 20.536068, 20.420572, 20.309284, ...
       20.208647, 20.121351, 20.047478, 19.985468];

T = [297.30597, 296.68796, 296.00015, 295.29218, 294.5859 , 293.87408, ...
       293.16592, 292.45074, 291.75427, 291.17065, 290.82468, 290.47232, ...
       289.96375, 289.36215, 288.71317, 288.026  , 287.3035 , 286.55222, ...
       285.77847, 284.98404, 284.17267, 283.35147, 282.52078, 281.68936, ...
       280.85803, 280.03442, 279.2208 , 278.42255, 277.64368, 276.8879 , ...
       276.15973, 275.4618 , 274.7968 , 274.166  , 273.56305, 272.97458, ...
       272.3873 , 271.79745, 271.20447, 270.6079 , 270.00705, 269.40292, ...
       268.79584, 268.18524, 267.57138, 266.95447, 266.33472, 265.71228, ...
       265.088  , 264.46164, 263.83322, 263.203  , 262.56998, 261.93607, ...
       261.2998 , 260.66312, 260.02475, 259.38583, 258.7459 , 258.10507, ...
       257.46362, 256.82217, 256.1805 , 255.53883, 254.89629, 254.25325, ...
       253.60977, 252.96584, 252.32162, 251.67645, 251.03009, 250.38303, ...
       249.73491, 249.0854 , 248.4346 , 247.78171, 247.1265 , 246.46973, ...
       245.80992, 245.14717, 244.48192, 243.8137 , 243.14241, 242.46788, ...
       241.78879, 241.10504, 240.41585, 239.72137, 239.02281, 238.3203 , ...
       237.6145 , 236.90504, 236.1916 , 235.47412, 234.75302, 234.0295 , ...
       233.30379, 232.57602, 231.84546, 231.11421, 230.38374, 229.65408, ...
       228.92616, 228.20088, 227.47804, 226.75896, 226.04483, 225.33463, ...
       224.62796, 223.92528, 223.22621, 222.53209, 221.84375, 221.16093, ...
       220.48518, 219.81668, 219.15381, 218.49542, 217.83873, 217.2015 , ...
       216.66414, 216.32498, 216.16821, 216.09955, 216.05128, 216.00337, ...
       215.95474, 215.90555, 215.85316, 215.79646, 215.73427, 215.66522, ...
       215.58827, 215.50389, 215.41241, 215.31508, 215.21184, 215.10269, ...
       214.98738, 214.86748, 214.74469, 214.61896, 214.49081, 214.36081, ...
       214.22946, 214.09793, 213.96646, 213.83572, 213.70706, 213.58463, ...
       213.4744 , 213.38275, 213.30763, 213.24243, 213.18019, 213.11655, ...
       213.04865, 212.97537, 212.89656, 212.81274];

TDP = [ 18.110207  ,  17.90727   ,  17.693665  ,  17.466213  , ...
        17.235289  ,  16.9934    ,  16.743793  ,  16.489311  , ...
        16.213278  ,  15.852479  ,  15.231667  ,  14.38421   , ...
        13.519393  ,  12.656171  ,  11.768246  ,  10.853851  , ...
         9.914828  ,   8.953311  ,   7.972823  ,   6.974203  , ...
         5.9594393 ,   4.9338183 ,   3.9014082 ,   2.8658388 , ...
         1.8323158 ,   0.81037915,  -0.19174719,  -1.1707317 , ...
        -2.1254423 ,  -3.0543587 ,  -3.9538422 ,  -4.821718  , ...
        -5.6575346 ,  -6.4619884 ,  -7.2393055 ,  -8.000828  , ...
        -8.756804  ,  -9.509268  , -10.2603245 , -11.009955  , ...
       -11.757151  , -12.502537  , -13.246774  , -13.990146  , ...
       -14.732476  , -15.47288   , -16.211197  , -16.949245  , ...
       -17.686012  , -18.419407  , -19.151045  , -19.882154  , ...
       -20.611334  , -21.339111  , -22.064693  , -22.785282  , ...
       -23.50276   , -24.220146  , -24.934292  , -25.642704  , ...
       -26.346474  , -27.046795  , -27.743305  , -28.436193  , ...
       -29.125021  , -29.808485  , -30.487104  , -31.159834  , ...
       -31.825245  , -32.485252  , -33.139915  , -33.785843  , ...
       -34.422436  , -35.05356   , -35.683727  , -36.313217  , ...
       -36.937744  , -37.55599   , -38.171677  , -38.786125  , ...
       -39.396423  , -40.000584  , -40.60422   , -41.213608  , ...
       -41.827293  , -42.441753  , -43.05607   , -43.67015   , ...
       -44.283764  , -44.895844  , -45.507126  , -46.11947   , ...
       -46.734707  , -47.359016  , -47.99531   , -48.64228   , ...
       -49.299572  , -49.967037  , -50.64497   , -51.331898  , ...
       -52.02056   , -52.70628   , -53.398705  , -54.105373  , ...
       -54.825035  , -55.555626  , -56.29649   , -57.04736   , ...
       -57.809937  , -58.574093  , -59.333855  , -60.094345  , ...
       -60.867306  , -61.654522  , -62.44242   , -63.229     , ...
       -64.014175  , -64.7986    , -65.575966  , -66.29216   , ...
       -66.84369   , -67.22736   , -67.5297    , -67.79973   , ...
       -68.04326   , -68.25861   , -68.45075   , -68.62557   , ...
       -68.78539   , -68.93316   , -69.069336  , -69.19831   , ...
       -69.32573   , -69.44923   , -69.56807   , -69.68263   , ...
       -69.795105  , -69.91027   , -70.024956  , -70.13757   , ...
       -70.24927   , -70.360085  , -70.46784   , -70.57165   , ...
       -70.67362   , -70.77402   , -70.872215  , -70.96939   , ...
       -71.06666   , -71.16399   , -71.25992   , -71.35385   , ...
       -71.44706   , -71.5398    , -71.63229   , -71.7249    , ...
       -71.8178    , -71.911064  , -72.00469   , -72.09864   ] + 273.15;

    es = @(T) 2.53e9*exp(-5420./(T)); %hPa

    Zm = 50:100:16000;

ua = [...
    0.47658452,  0.95294815,  1.3875318 ,  1.7966706 ,  2.1973934 , ...
    2.6013203 ,  3.0048923 ,  3.4033713 ,  3.790009  ,  4.162258  , ...
    4.5231023 ,  4.8775086 ,  5.2336826 ,  5.6035624 ,  5.987069  , ...
    6.378072  ,  6.77088   ,  7.1633253 ,  7.5572133 ,  7.9522996 , ...
    8.347267  ,  8.740765  ,  9.131449  ,  9.518194  ,  9.900608  , ...
    10.278268  , 10.651744  , 11.021663  , 11.387418  , 11.750075  , ...
    12.111185  , 12.472893  , 12.836091  , 13.201147  , 13.568064  , ...
    13.936623  , 14.307282  , 14.6805525 , 15.056863  , 15.436586  , ...
    15.821008  , 16.210062  , 16.601654  , 16.995583  , 17.391272  , ...
    17.786442  , 18.17902   , 18.559143  , 18.891617  , 19.120087  , ...
    19.218029  , 19.237991  , 19.239965  , 19.239948  , 19.2404    , ...
    19.240326  , 19.239784  , 19.238096  , 19.234818  , 19.22959   , ...
    19.223217  , 19.218271  , 19.214367  , 19.210575  , 19.206923  , ...
    19.202518  , 19.198347  , 19.193287  , 19.186335  , 19.181215  , ...
    19.178299  , 19.177013  , 19.176592  , 19.176052  , 19.17564   , ...
    19.174599  , 19.174654  , 19.17693   , 19.180464  , 19.18676   , ...
    19.194975  , 19.203522  , 19.21069   , 19.21636   , 19.22138   , ...
    19.226967  , 19.235643  , 19.248669  , 19.264055  , 19.27637   , ...
    19.287117  , 19.29974   , 19.321892  , 19.349031  , 19.375336  , ...
    19.400103  , 19.417164  , 19.431643  , 19.449213  , 19.464333  , ...
    19.479576  , 19.50084   , 19.522045  , 19.53405   , 19.537514  , ...
    19.540237  , 19.547644  , 19.56084   , 19.579275  , 19.60266   , ...
    19.627113  , 19.651411  , 19.67942   , 19.713552  , 19.752777  , ...
    19.793156  , 19.830967  , 19.867952  , 19.906353  , 19.945305  , ...
    19.976742  , 19.998983  , 20.025377  , 20.06455   , 20.100695  , ...
    20.126104  , 20.145374  , 20.155893  , 20.155586  , 20.147774  , ...
    20.135006  , 20.114746  , 20.08623   , 20.051514  , 20.014133  , ...
    19.97604   , 19.935068  , 19.887667  , 19.836843  , 19.78514   , ...
    19.732502  , 19.677818  , 19.621395  , 19.564903  , 19.508953  , ...
    19.454082  , 19.400139  , 19.346292  , 19.292286  , 19.238525  , ...
    19.18676   , 19.145292  , 19.123299  , 19.125301  , 19.151012  , ...
    19.197056  , 19.258047  , 19.327827  , 19.400885  , 19.472883   ...
];
va = [...
    0.31551197,  0.3608571 ,  0.3948148 ,  0.4281418 ,  0.45882785, ...
    0.47932854,  0.47983113,  0.4610822 ,  0.43107083,  0.38941684, ...
    0.3403077 ,  0.29652974,  0.26143253,  0.22980371,  0.1961926 , ...
    0.1637127 ,  0.13781194,  0.11849884,  0.1038715 ,  0.09460594, ...
    0.09256307,  0.09596159,  0.10340483,  0.11341699,  0.1246613 , ...
    0.13619612,  0.14738257,  0.15722577,  0.16475883,  0.16894302, ...
    0.16981998,  0.16802655,  0.1628517 ,  0.15409493,  0.14432694, ...
    0.13674694,  0.13298497,  0.1332051 ,  0.13658732,  0.14136755, ...
    0.14628056,  0.15139566,  0.15625875,  0.15965128,  0.16102384, ...
    0.16018672,  0.160111  ,  0.17926879,  0.25121543,  0.37688783, ...
    0.4644392 ,  0.4726525 ,  0.45283055,  0.4268578 ,  0.39873028, ...
    0.36911345,  0.338029  ,  0.30505407,  0.2691393 ,  0.23090982, ...
    0.19094023,  0.14929552,  0.10620724,  0.0638846 ,  0.021493  , ...
    -0.01958837, -0.05824608, -0.09588595, -0.13427655, -0.17409857, ...
    -0.21467786, -0.2554095 , -0.2956094 , -0.33300036, -0.3668036 , ...
    -0.39703918, -0.4248652 , -0.45058537, -0.47283983, -0.49232012, ...
    -0.5089947 , -0.52498764, -0.54288316, -0.56125385, -0.57860786, ...
    -0.59429437, -0.60834694, -0.62113076, -0.6313893 , -0.6363126 , ...
    -0.6348628 , -0.632486  , -0.6399698 , -0.64722455, -0.6441534 , ...
    -0.63745904, -0.6312891 , -0.63109297, -0.63511664, -0.63919   , ...
    -0.64156735, -0.6427166 , -0.6458378 , -0.65277684, -0.66457176, ...
    -0.6872645 , -0.7140995 , -0.74391645, -0.78047216, -0.819945  , ...
    -0.86176366, -0.9074199 , -0.96123195, -1.0190103 , -1.0776979 , ...
    -1.1338784 , -1.1860504 , -1.2366174 , -1.2866989 , -1.3376706 , ...
    -1.3799034 , -1.4026139 , -1.411431  , -1.4210217 , -1.4274024 , ...
    -1.4246327 , -1.4129113 , -1.3943467 , -1.3733581 , -1.3543233 , ...
    -1.335386  , -1.3134462 , -1.2886049 , -1.2641792 , -1.2406474 , ...
    -1.2123885 , -1.1798934 , -1.1435902 , -1.1028236 , -1.057947  , ...
    -1.0120108 , -0.964987  , -0.91537225, -0.8634302 , -0.80887914, ...
    -0.7509227 , -0.689812  , -0.6257286 , -0.55996853, -0.49224773, ...
    -0.4172159 , -0.32820567, -0.22865808, -0.13007827, -0.04534268, ...
    0.01680955,  0.05413124,  0.06968116,  0.06901853,  0.05858435...
];
       %% plot sounding data
fig = figure('units','inches','position',[0,0,3,3]);
% figure
mask = 1:10:numel(P);
skewt(P(mask), T(mask)-273.15, TDP(mask)-273.15, -ua(mask), -va(mask));

ax = gca;
ax.Position = [0.1269 0.0611 0.75 0.9139]

print2(gcf, '~/figures/publications/exmiras/SL-sounding.pdf')

Pv = es(T).*rh/100; % vapor pressure in hPa

temp = griddedInterpolant(Zm, T);
pres = griddedInterpolant(Zm, P); % hPa
pressv = griddedInterpolant(Zm, Pv); % hPa

Rv = 461.5; % J/kg/K
Rd = 287.05; % J/kg/K

for scanID = 1:numel(files)

    %% setup for EXMIRAS runs.
    ex = exmiras;
    %% set up initial droplet size distribution
    ex.xgrid = [50];
    ex.ygrid = [50];
    ex.zgrid = 25:50:levelOfAOSPRE;

    [ym, xm, zm] = meshgrid(ex.ygrid, ex.xgrid, ex.zgrid);

    % es = @(T) 2.53e9*exp(-5420./(T)); %hPa
    ex.T = temp(zm);
    ex.p = pres(zm);
    ex.pv = pressv(zm);

    %% setup zhh and zdr time profile
    speed = 15; % m/s
    obsRef = Zhhs(:,scanID);
    obsZdr = Zdrs(:,scanID);
    % startInd = find((~isnan(obsRef) | ~isnan(obsZdr) ) & obsZdr > 0.25 & obsRef>10,1);
    startInd = 1;
    obsRef = obsRef(startInd:720);
    obsZdr = obsZdr(startInd:720);
    timeToGate = (0:75:75*numel(obsRef)-1)/speed;




    ex.u = zeros(size(ex.T));
    ex.v = zeros(size(ex.T));
    ex.w = zeros(size(ex.T));

    %% reshape to match model grid
    ex.T = reshape(ex.T, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);
    ex.p = reshape(ex.p, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);
    ex.pv = reshape(ex.pv, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);
    ex.u = reshape(ex.u, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);
    ex.v = reshape(ex.v, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);
    ex.w = reshape(ex.w, [numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid)]);


    %% initialize dsd from reflectivity/zdr
    dBZi = obsRef(1) + rand(numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid))*0;
    Zdri = obsZdr(1) + rand(numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid))*0;
    dBZi(:,:,1:size(dBZi,3)-1) = -inf;
    Zdri(:,:,1:size(dBZi,3)-1) = 0;


    % initialize dsd from reflectivity/zdr
    ex = ex.initFromLambdaName("C");
    ex = ex.initFromReflectivity(dBZi, Zdri);
    ex.NP = ex.N;

    %set time step/total integration time
    ex.dt = 0.5;
    ex.st = max(timeToGate)/ex.dt+10;

    sz = numel(ex.zgrid);
    %% storm time?
    numSteps = ex.st;
    T = zeros(numSteps, sz);
    p = zeros(numSteps, sz);
    qv = zeros(numSteps, sz);
    pv = zeros(numSteps, sz);
    dBZhh = zeros(numSteps, sz);
    dBZvv = zeros(numSteps, sz);
    theta = zeros(numSteps, sz);
    RR = zeros(numSteps, sz);
    rhohv = zeros(numSteps, sz);
    kdp = zeros(numSteps, sz);

    % save initial temperature profile for later plotting
    T0 = ex.T;

    ex = ex.integrate;
    lvl = 0;
  
    iObs = 1;
    % fig = figure('units','inches','position',[0,0,6.05,3]);
    hold on
    for i = 2:numSteps
        try
            if (i-1)*ex.dt>=timeToGate(iObs+1) & i*ex.dt<timeToGate(iObs+2)
                % update the model with the next observation
                fprintf('updating model with observation\n')
                NTemp0 = ex.N;

                iObs = iObs + 1;
                dbz = zeros(numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid));
                dbz(end) = obsRef(iObs);
                zdr = zeros(numel(ex.xgrid), numel(ex.ygrid), numel(ex.zgrid));
                zdr(end) = max(min(obsZdr(iObs),3),0.2);
                ex = ex.initFromReflectivity(dbz, zdr);
                ex.N(1,1,1:end-1,:) = NTemp0(1,1,1:end-1,:);

                
                % if any(ex.N(1,1,end,:))
                %     plot(ex.D, squeeze(ex.N(1,1,end,:)), 'DisplayName', sprintf('%2.0f dBZ %2.1f Z_{DR}', obsRef(iObs), obsZdr(iObs)), 'linewidth', 1.5)
                %     legend
                %     print2(fig, ('./KOKC_N.png'), 'quality', '-r300')
                % end

                Ntemp = ex.N;
                Ntemp(:,:,1:end-1,:) = 0;
                ex.NP = Ntemp;


                %% plot the model output
                

                % r = 0.9951 + 0.02510*ex.D - 0.03644*ex.D.^2 + 0.005303*ex.D.^3 - 0.0002492*ex.D.^4;
                % fprintf('updated model with observation')
                iObs = iObs + 1;
        
            end
        catch
        
            break
        end
        ex = ex.integrate;
        
        T(i,:) = squeeze(ex.T(1,1,:))-squeeze(T0(1,1,:));
        theta(i,:) = ex.theta(1,1,:);
        p(i,:) = ex.p(1,1,:);
        qv(i,:) = ex.qv(1,1,:);
        pv(i,:) = ex.pv(1,1,:);
        dBZhh(i,:) = ex.Zhh(1,1,:);
        dBZvv(i,:) = ex.Zvv(1,1,:);
        RR(i,:) = ex.RR(1,1,:);
        rhohv(i,:) = ex.rhohv(1,1,:);
        kdp(i,:) = ex.kdp(1,1,:);
        % dts(i) = dts(i-1) + seconds(ex.dt);
    end
    Zdr = dBZhh - dBZvv;

    save(sprintf('./SL-%d_%d.mat', levelOfAOSPRE,scanID), 'T', 'p', 'qv', 'pv', 'dBZhh', 'dBZvv', 'Zdr', 'RR', 'rhohv', 'kdp', 'ex');

end
% quit
for scanID = 14
    % scanID = 1;
    load(sprintf('./SL-%d_%d.mat', levelOfAOSPRE,scanID), 'T', 'p', 'qv', 'pv', 'dBZhh', 'dBZvv', 'Zdr', 'RR', 'rhohv', 'kdp', 'ex');
    numSteps = size(T, 1);
    [TT, ZT] = meshgrid((1:numSteps)*ex.dt, ex.zgrid);
    TT = TT';
    ZT = ZT';
    [~,dT] = gradient(T, 0.5);
    dT = dT*3600; % convert to K/hr
    variablesToPlot = {dlog10(dT), 100*qv, dBZhh, Zdr, RR, rhohv, kdp};
    titles = {'dTdt', 'RH', 'Zhh', 'Zdr', 'RainRate', 'CC', 'KDP'};
    plotTimeProfile( ex.zgrid,(1:numSteps)*ex.dt,['/h/eol/nbarron/figures/publications/exmiras/SL_',num2str(scanID)], variablesToPlot, titles)
end

%}